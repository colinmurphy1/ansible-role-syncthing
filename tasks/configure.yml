---

# Configure syncthing

- name: Get information about Syncthing user
  ansible.builtin.user:
    name: "{{ syncthing_user }}"
    state: present
  register: syncthing_user_info
  check_mode: true # Don't do anything to the user account

- name: Wait for the configuration file to be created
  become: true
  become_user: "{{ syncthing_user }}"
  ansible.builtin.wait_for:
    path: "{{ syncthing_config_path }}/config.xml"
    state: present

- name: Configure Syncthing
  become: true
  become_user: "{{ syncthing_user }}"
  community.general.xml:
    path: "{{ syncthing_config_path }}/config.xml"
    xpath: "{{ item.xpath }}"
    value: "{{ item.value }}"
    attribute: "{{ item.attribute | default(omit) }}"
  loop:
    - xpath: "/configuration/gui/address"
      value: "{{ syncthing_gui_address }}"
    - xpath: "/configuration/gui/user"
      value: "{{ syncthing_gui_user }}"
    - xpath: "/configuration/gui/password"
      value: "{{ syncthing_gui_password }}"
    - xpath: "/configuration/options/urAccepted"
      value: "{% if syncthing_usage_reporting %}3{% else %}0{% endif %}"
    - xpath: "/configuration/gui"
      attribute: "tls"
      value: "{{ syncthing_gui_tls | string | lower }}"
    - xpath: "/configuration/defaults/folder"
      attribute: "path"
      value: "{{ syncthing_default_path }}"
  notify: Restart Syncthing

- name: Use custom certificate for GUI
  ansible.builtin.copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: "{{ syncthing_user }}"
      group: "{{ syncthing_user }}"
      mode: '0600'
      remote_src: true
      backup: true
  loop:
    - { src: "{{ syncthing_gui_cert }}", dest: "{{ syncthing_config_path }}/https-cert.pem" }
    - { src: "{{ syncthing_gui_cert_key }}", dest: "{{ syncthing_config_path }}/https-key.pem" }
  when:
    - syncthing_gui_cert|length > 0
    - syncthing_gui_cert_key|length > 0
